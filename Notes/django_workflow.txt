* { % block content %}


{ % endblock %}

This is used to wrap a content
It's going to tell the website where to add all these child templates
when we wrap a parent or another template in the website

When going to home page the home page content is going to be i here
when going to room the room content is going to be in here 


{% extends 'main.html' %}

{% block content %}
<h1>Home Template</h1>

{% endblock content %}

* Here, extends is used rather than include.
This extends the file main.html file from the template
and then h1 home template will be wrapped
Basically the parent block is empty
child block is filling up that content

* {% block content %}


{% endblock %}

% should be at both the corner -> otherwise it will not work


* {% extends 'main.html' %}  '' should be added

{% block content %}
<h1>Home Template</h1>

{% endblock content %}

there should be nothing above {% extends 'main.html' %}
otherwise there will be error

* Template engine


* Have to close the loop statement
and if statement in template

* rooms1 = [
    {'id': 1, 'name': 'Lets learn python'},
    {'id': 2, 'name': 'Design with me'},
    {'id': 3, 'name': 'Frontend Developers'},
]
This is how a list could be created

* def home(request):
    return render(request, 'home.html', {'rooms': rooms1}) 

data could rendered like this to the template engine
*reminder -> function name and dictionary list shouldn't be the statement

* <div>
    <div>
        
        {% for room in rooms %}
            <div>
                <h5>{{room.id}} -- {{room.name}}</h5>
            </div>

        {% endfor %}
    </div>
</div>

This is how loop can be created and rendered data from views can be displayed

